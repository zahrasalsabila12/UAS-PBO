/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uas;

import java.sql.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;
import java.sql.ResultSet;
import java.util.Vector;

/**
 *
 * @author ADMIN
 */
public class Admin extends javax.swing.JFrame {
    private Connection connection;
    private PreparedStatement preparedStatement;
    private ResultSet RS;
    private DefaultTableModel table;
    
    public Admin() {
        initComponents();
        Koneksi();
        displayData();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdGaransi = new javax.swing.ButtonGroup();
        Admin = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        txtBrand = new javax.swing.JTextField();
        txtStok = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        cbModel = new javax.swing.JComboBox<>();
        rdGaransi1 = new javax.swing.JRadioButton();
        rdGaransi3 = new javax.swing.JRadioButton();
        rdGaransi2 = new javax.swing.JRadioButton();
        btnCari = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAdmin = new javax.swing.JTable();
        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Admin.setBackground(new java.awt.Color(153, 204, 255));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manajemen Data TV Store");

        btnLogout.setBackground(new java.awt.Color(255, 51, 51));
        btnLogout.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(255, 255, 255));
        btnLogout.setText("Logout");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nama Produk");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Model Produk");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Garansi Produk");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Stok Produk");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Brand Produk");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Harga Produk");

        txtNama.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        txtBrand.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        txtStok.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        txtHarga.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        cbModel.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cbModel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "TV Tabung", "Plasma TV", "TV LCD", "TV LED", "TV OLED", "TV UHD", "Smart TV" }));

        rdGaransi.add(rdGaransi1);
        rdGaransi1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rdGaransi1.setText("1 Tahun");

        rdGaransi.add(rdGaransi3);
        rdGaransi3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rdGaransi3.setText("5 Tahun");

        rdGaransi.add(rdGaransi2);
        rdGaransi2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rdGaransi2.setText("3 Tahun");

        btnCari.setBackground(new java.awt.Color(0, 0, 0));
        btnCari.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnCari.setForeground(new java.awt.Color(255, 255, 255));
        btnCari.setText("Cari");

        txtCari.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        tbAdmin.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NAMA", "MODEL", "GARANSI", "BRAND", "STOK", "HARGA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbAdminMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbAdmin);

        btnTambah.setBackground(new java.awt.Color(0, 0, 0));
        btnTambah.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnTambah.setForeground(new java.awt.Color(255, 255, 255));
        btnTambah.setText("Tambah");
        btnTambah.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTambahMouseClicked(evt);
            }
        });
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(0, 0, 0));
        btnEdit.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnBatal.setBackground(new java.awt.Color(0, 0, 0));
        btnBatal.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnBatal.setForeground(new java.awt.Color(255, 255, 255));
        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(0, 0, 0));
        btnHapus.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnHapus.setForeground(new java.awt.Color(255, 255, 255));
        btnHapus.setText("Hapus");

        javax.swing.GroupLayout AdminLayout = new javax.swing.GroupLayout(Admin);
        Admin.setLayout(AdminLayout);
        AdminLayout.setHorizontalGroup(
            AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(AdminLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AdminLayout.createSequentialGroup()
                            .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(AdminLayout.createSequentialGroup()
                                    .addComponent(rdGaransi1)
                                    .addGap(18, 18, 18)
                                    .addComponent(rdGaransi2)
                                    .addGap(18, 18, 18)
                                    .addComponent(rdGaransi3))
                                .addComponent(cbModel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AdminLayout.createSequentialGroup()
                            .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel6)
                                .addComponent(jLabel5))
                            .addGap(22, 22, 22)
                            .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(AdminLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(23, 23, 23)
                        .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStok, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(AdminLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(btnTambah)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit)
                        .addGap(18, 18, 18)
                        .addComponent(btnBatal)
                        .addGap(18, 18, 18)
                        .addComponent(btnHapus)))
                .addGap(18, 18, 18)
                .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdminLayout.createSequentialGroup()
                        .addComponent(btnCari)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        AdminLayout.setVerticalGroup(
            AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCari)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AdminLayout.createSequentialGroup()
                        .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(rdGaransi1)
                            .addComponent(rdGaransi3)
                            .addComponent(rdGaransi2))
                        .addGap(18, 18, 18)
                        .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTambah)
                            .addComponent(btnEdit)
                            .addComponent(btnBatal)
                            .addComponent(btnHapus))
                        .addGap(43, 43, 43))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Admin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Admin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void Koneksi(){
        try {
            String url = "jdbc:mysql://localhost:3306/dbtelevisi";
            String username = "root";
            String password = "";
            connection = DriverManager.getConnection(url, username, password);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }
    
    private void displayData(){
        try{
            preparedStatement = connection.prepareStatement("Select * From tbtelevisi");
            RS = preparedStatement.executeQuery();
            ResultSetMetaData RSMD = RS.getMetaData();
            int kolom = RSMD.getColumnCount();
            DefaultTableModel tabel = (DefaultTableModel) tbAdmin.getModel();
            tabel.setRowCount(0);
            
            while(RS.next()){
                Vector v = new Vector();
                for(int i = 1; i <= kolom; i++){
                    v.add(RS.getInt("id"));
                    v.add(RS.getString("nama"));
                    v.add(RS.getString("model"));
                    v.add(RS.getString("garansi"));
                    v.add(RS.getString("brand"));
                    v.add(RS.getInt("stok"));
                    v.add(RS.getInt("harga"));
                }
                tabel.addRow(v);
            }
            
        }catch(SQLException Ex){
            JOptionPane.showMessageDialog(this, Ex);
        }
    }
    
    private void btnTambahMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTambahMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTambahMouseClicked

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        if(txtNama.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Data belum lengkap");
            txtNama.setFocusable(true);
        }else if (cbModel.getSelectedItem().toString() == "-"){
            JOptionPane.showMessageDialog(this, "Data belum lengkap. Mohon pilih model produk!");
        }else if(txtBrand.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Data belum lengkap");
            txtBrand.setFocusable(true);
        }else if (txtStok.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Data belum lengkap");
            txtStok.setFocusable(true);
        }else if (txtHarga.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Data belum lengkap");
            txtHarga.setFocusable(true);
        }else{
            String nama = txtNama.getText();
            String model = null;
            if (cbModel.getSelectedItem().toString() == "TV Tabung"){
                model = "TV Tabung";
            }else if (cbModel.getSelectedItem().toString() == "Plasma TV"){
                model = "Plasma TV";
            }else if (cbModel.getSelectedItem().toString() == "TV LCD"){
                model = "TV LCD";
            }else if (cbModel.getSelectedItem().toString() == "TV LED"){
                model = "TV LED";
            }else if (cbModel.getSelectedItem().toString() == "TV OLED"){
                model = "TV OLED";
            }else if (cbModel.getSelectedItem().toString() == "TV UHD"){
                model = "TV UHD";
            }else if (cbModel.getSelectedItem().toString() == "Smart TV"){
                model = "Smart TV";
            }else{
                cbModel.setFocusable(true);
                JOptionPane.showMessageDialog(this, "Data belum lengkap. Mohon pilih model produk!");
            }
            String garansi = null;
            if (rdGaransi1.isSelected()){
                garansi = "1 Tahun";
            }else if (rdGaransi2.isSelected()){
                garansi = "3 Tahun";
            }else if (rdGaransi3.isSelected()){
                garansi = "5 Tahun";
            }else{
                JOptionPane.showMessageDialog(this, "Data belum lengkap. Mohon pilih garansi produk!");
            }
            String brand = txtBrand.getText();
            int stok = Integer.parseInt(txtStok.getText());
            int harga = Integer.parseInt(txtHarga.getText()); 
            try{
                preparedStatement = connection.prepareStatement("INSERT INTO tbtelevisi (nama, model, brand, garansi, harga, stok) VALUES (?, ?, ?, ?, ?, ?)");
                preparedStatement.setString(1, nama);
                preparedStatement.setString(2, model);
                preparedStatement.setString(3, brand);
                preparedStatement.setString(4, garansi);
                preparedStatement.setInt(5, harga);
                preparedStatement.setInt(6, stok);
                int row = preparedStatement.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan");
                connection.close();
            }catch(Exception Ex){
                JOptionPane.showMessageDialog(this, Ex);
            }
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        // TODO add your handling code here:
        txtNama.setText("");
        txtBrand.setText("");
        txtStok.setText("");
        txtHarga.setText("");
        cbModel.removeAllItems();
        txtNama.setFocusable(true);
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tabel = (DefaultTableModel) tbAdmin.getModel();
        
        if(txtNama.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Data belum lengkap");
            txtNama.setFocusable(true);
        }else if (cbModel.getSelectedItem().toString() == "-"){
            JOptionPane.showMessageDialog(this, "Data belum lengkap. Mohon pilih model produk!");
        }else if(txtBrand.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Data belum lengkap");
            txtBrand.setFocusable(true);
        }else if (txtStok.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Data belum lengkap");
            txtStok.setFocusable(true);
        }else if (txtHarga.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Data belum lengkap");
            txtHarga.setFocusable(true);
        }else{
            
            String nama = txtNama.getText();
            String model = null;
            if (cbModel.getSelectedItem().toString() == "TV Tabung"){
                model = "TV Tabung";
            }else if (cbModel.getSelectedItem().toString() == "Plasma TV"){
                model = "Plasma TV";
            }else if (cbModel.getSelectedItem().toString() == "TV LCD"){
                model = "TV LCD";
            }else if (cbModel.getSelectedItem().toString() == "TV LED"){
                model = "TV LED";
            }else if (cbModel.getSelectedItem().toString() == "TV OLED"){
                model = "TV OLED";
            }else if (cbModel.getSelectedItem().toString() == "TV UHD"){
                model = "TV UHD";
            }else if (cbModel.getSelectedItem().toString() == "Smart TV"){
                model = "Smart TV";
            }else{
                cbModel.setFocusable(true);
                JOptionPane.showMessageDialog(this, "Data belum lengkap. Mohon pilih model produk!");
            }
            String garansi = null;
            if (rdGaransi1.isSelected()){
                garansi = "1 Tahun";
            }else if (rdGaransi2.isSelected()){
                garansi = "3 Tahun";
            }else if (rdGaransi3.isSelected()){
                garansi = "5 Tahun";
            }else{
                JOptionPane.showMessageDialog(this, "Data belum lengkap. Mohon pilih garansi produk!");
            }
            String brand = txtBrand.getText();
            int stok = Integer.parseInt(txtStok.getText());
            int harga = Integer.parseInt(txtHarga.getText()); 
            
            try{
                preparedStatement = connection.prepareStatement("Update tbtelevisi set nama = ?, model = ?, brand = ?, garansi = ?, harga = ?, stok = ? where id = ?");
                preparedStatement.setInt(0, Integer.parseInt(tabel.getValueAt(tbAdmin.getSelectedRow(), 0).toString()));
                preparedStatement.setString(1, nama);
                preparedStatement.setString(2, model);
                preparedStatement.setString(3, brand);
                preparedStatement.setString(4, garansi);
                preparedStatement.setInt(5, stok);
                preparedStatement.setInt(6, harga);
                preparedStatement.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data berhasil diubah");
                connection.close();
            }catch (SQLException Ex){
                JOptionPane.showMessageDialog(this, "Data gagal diubah");
            }
            
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void tbAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbAdminMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tabel = (DefaultTableModel) tbAdmin.getModel();

        int id = Integer.parseInt(tabel.getValueAt(tbAdmin.getSelectedRow(), 0).toString());
        String nama = tabel.getValueAt(tbAdmin.getSelectedRow(), 1).toString();
        String model = tabel.getValueAt(tbAdmin.getSelectedRow(), 2).toString();
        String garansi = tabel.getValueAt(tbAdmin.getSelectedRow(), 3).toString();
        String brand = tabel.getValueAt(tbAdmin.getSelectedRow(), 4).toString();
        String stok = tabel.getValueAt(tbAdmin.getSelectedRow(), 5).toString();
        String harga = tabel.getValueAt(tbAdmin.getSelectedRow(), 6).toString();

        txtNama.setText(nama);
        if (cbModel.getSelectedItem().toString() == model){
            cbModel.setSelectedItem(model);
        }else{
            cbModel.setFocusable(true);
            JOptionPane.showMessageDialog(this, "Data belum lengkap. Mohon ubah model produk!");
        }

        if(garansi == "1 Tahun"){
            rdGaransi1.setSelected(true);
        }else if(garansi == "3 Tahun"){
            rdGaransi2.setSelected(true);
        }else if(garansi == "5 Tahun"){
            rdGaransi3.setSelected(true);
        }else{
            JOptionPane.showMessageDialog(this, "Data belum lengkap. Mohon pilih garansi produk!");
        }
        
        txtBrand.setText(brand);
        txtStok.setText(stok);
        txtHarga.setText(harga);
    }//GEN-LAST:event_tbAdminMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Admin;
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox<String> cbModel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.ButtonGroup rdGaransi;
    private javax.swing.JRadioButton rdGaransi1;
    private javax.swing.JRadioButton rdGaransi2;
    private javax.swing.JRadioButton rdGaransi3;
    private javax.swing.JTable tbAdmin;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtStok;
    // End of variables declaration//GEN-END:variables
}
